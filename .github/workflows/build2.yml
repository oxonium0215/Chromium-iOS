name: Build Chromium for iOS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. リポジトリチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. depot_tools のインストール
      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "export PATH=\$PATH:${GITHUB_WORKSPACE}/depot_tools" >> $GITHUB_ENV

      # 3. Chromium ソースコードのキャッシュを復元
      - name: Restore Chromium source cache
        uses: actions/cache@v3
        with:
          path: ./src
          key: ${{ runner.os }}-chromium-src
          restore-keys: |
            ${{ runner.os }}-chromium-src

      # 4. Chromium ソースコードを取得（キャッシュがない場合のみ）
      - name: Fetch Chromium source code
        run: |
          if [ ! -d "./src" ]; then
            fetch ios
            gclient sync
          fi

      # 5. Chromium ソースコードをキャッシュ
      - name: Save Chromium source cache
        uses: actions/cache@v3
        with:
          path: ./src
          key: ${{ runner.os }}-chromium-src

      # 6. ビルド設定生成
      - name: Generate build configuration
        run: |
          cd src
          gn gen out/Default --args='target_os="ios" target_cpu="arm64"'

      # 7. Chromium のビルド
      - name: Build Chromium
        run: |
          cd src
          ninja -C out/Default chrome

      # 8. IPA の作成
      - name: Package IPA
        run: |
          cd src
          mkdir -p Payload
          cp -R out/Default/Chromium.app Payload/
          zip -r Chromium.ipa Payload

      # 9. リリースにアップロード
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src/Chromium.ipa
          asset_name: Chromium.ipa
          asset_content_type: application/octet-stream
